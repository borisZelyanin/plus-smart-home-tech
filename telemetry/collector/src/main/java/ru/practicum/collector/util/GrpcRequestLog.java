package ru.practicum.collector.util;

import com.google.protobuf.Message;
import com.google.protobuf.util.JsonFormat;
import lombok.Getter;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;
import ru.yandex.practicum.grpc.telemetry.event.HubEventProto;

import java.time.Instant;
import java.util.ArrayList;
import java.util.List;

@Slf4j
@Component
public class GrpcRequestLog {

    @Getter
    private final List<String> entries = new ArrayList<>();

    public void log(HubEventProto request) {
        String json;
        try {
            json = JsonFormat.printer().includingDefaultValueFields().print(request);
        } catch (Exception e) {
            json = "[–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –≤ JSON: %s]".formatted(e.getMessage());
        }

        String summary = """
            -------------------------------
            üõ∞Ô∏è –í—Ä–µ–º—è: %s
            üß≠ Hub ID: %s
            üì¶ –¢–∏–ø —Å–æ–±—ã—Ç–∏—è: %s
            üìú JSON:
            %s
            -------------------------------""".formatted(
                Instant.now(), request.getHubId(), request.getPayloadCase().name(), json
        );

        entries.add(summary);
    }

    // ‚úÖ –ù–æ–≤–∞—è –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∞ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    public void log(String type, String hubId, Message payload) {
        String json;
        try {
            json = JsonFormat.printer().includingDefaultValueFields().print(payload);
        } catch (Exception e) {
            json = "[–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –≤ JSON: %s]".formatted(e.getMessage());
        }

        String summary = """
            -------------------------------
            üõ∞Ô∏è –í—Ä–µ–º—è: %s
            üß≠ Hub ID: %s
            üì¶ –¢–∏–ø —Å–æ–±—ã—Ç–∏—è: %s
            üìú JSON:
            %s
            -------------------------------""".formatted(
                Instant.now(), hubId, type, json
        );

        entries.add(summary);
    }

    public void printSummary() {
        log.info("\nüìã GRPC –ó–ê–ü–†–û–°–´ –ü–û–õ–£–ß–ï–ù–ù–´–ï COLLECTOR:");
        entries.forEach(log::info);
        log.info("üßæ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {}", entries.size());
    }
}